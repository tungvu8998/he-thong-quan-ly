// user.cpp
#include "user.h"
#include <fstream>
#include <sstream>
#include <vector>
// #include <filesystem> // XOA DONG NAY

// Constructor
User::User(std::string username, std::string hashedPassword, std::string fullName,
           std::string email, std::string phoneNumber, std::string userType,
           bool isAutoGenerated)
    : username(username), hashedPassword(hashedPassword), fullName(fullName),
      email(email), phoneNumber(phoneNumber), userType(userType),
      isAutoGeneratedPassword(isAutoGenerated) {
    this->userId = Utils::generateUniqueId(); // Sinh ID duy nhat khi tao tai khoan
    this->registrationDate = time(0); // Thoi gian dang ky hien tai
}

// Hien thi thong tin nguoi dung
void User::displayUserInfo() const {
    std::cout << "--- Thong tin nguoi dung ---" << std::endl;
    std::cout << "User ID: " << userId << std::endl;
    std::cout << "Ten dang nhap: " << username << std::endl;
    std::cout << "Ho va ten: " << fullName << std::endl;
    std::cout << "Email: " << email << std::endl;
    std::cout << "So dien thoai: " << phoneNumber << std::endl;
    std::cout << "Loai nguoi dung: " << userType << std::endl;
    std::cout << "Ngay dang ky: " << Utils::timeToString(registrationDate) << std::endl;
    std::cout << "Mat khau tu dong sinh: " << (isAutoGeneratedPassword ? "Co" : "Khong") << std::endl;
    std::cout << "------------------------" << std::endl;
}

// Cap nhat ten day du
void User::updateFullName(const std::string& newFullName) {
    this->fullName = newFullName;
}

// Cap nhat email
void User::updateEmail(const std::string& newEmail) {
    this->email = newEmail;
}

// Cap nhat so dien thoai
void User::updatePhoneNumber(const std::string& newPhoneNumber) {
    this->phoneNumber = newPhoneNumber;
}

// Thay doi mat khau
void User::changePassword(const std::string& newHashedPassword) {
    this->hashedPassword = newHashedPassword;
    this->isAutoGeneratedPassword = false; // Mat khau da duoc thay doi thu cong
}

// Chuyen doi doi tuong User thanh chuoi de luu vao file
std::string User::toString() const {
    std::stringstream ss;
    ss << "userId:" << userId << "\n"
       << "username:" << username << "\n"
       << "hashedPassword:" << hashedPassword << "\n"
       << "fullName:" << fullName << "\n"
       << "email:" << email << "\n"
       << "phoneNumber:" << phoneNumber << "\n"
       << "userType:" << userType << "\n"
       << "registrationDate:" << registrationDate << "\n" // Luu timestamp
       << "isAutoGeneratedPassword:" << (isAutoGeneratedPassword ? "1" : "0");
    return ss.str();
}

// Tao doi tuong User tu chuoi doc tu file
User* User::fromString(const std::string& data) {
    std::string line;
    std::istringstream iss(data);

    std::string userId, username, hashedPassword, fullName, email, phoneNumber, userType;
    time_t registrationDate = 0;
    bool isAutoGeneratedPassword = false;

    while (std::getline(iss, line)) {
        std::vector<std::string> parts = Utils::splitString(line, ':');
        if (parts.size() < 2) continue;
        std::string key = Utils::trimString(parts[0]);
        std::string value = Utils::trimString(parts[1]); // Lay phan con lai sau dau ':' dau tien

        if (key == "userId") userId = value;
        else if (key == "username") username = value;
        else if (key == "hashedPassword") hashedPassword = value;
        else if (key == "fullName") fullName = value;
        else if (key == "email") email = value;
        else if (key == "phoneNumber") phoneNumber = value;
        else if (key == "userType") userType = value;
        else if (key == "registrationDate") registrationDate = std::stoll(value); // Doc timestamp
        else if (key == "isAutoGeneratedPassword") isAutoGeneratedPassword = (value == "1");
    }

    if (username.empty() || hashedPassword.empty() || userId.empty()) {
        return nullptr; // Du lieu khong hop le
    }

    User* user = new User(username, hashedPassword, fullName, email, phoneNumber, userType, isAutoGeneratedPassword);
    user->userId = userId; // Gan lai userId da doc tu file
    user->registrationDate = registrationDate; // Gan lai registrationDate da doc tu file
    return user;
}

// Luu doi tuong User vao file
// (Da them cap nhat file index)
bool User::saveToFile() const {
    std::string userDir = "data/users/";
    std::string userIndexFile = "data/user_index.txt"; // File index nguoi dung
    
    // Dam bao thu muc 'data' va 'data/users' ton tai
    Utils::createDirectoryIfNotExists("data");
    Utils::createDirectoryIfNotExists(userDir);

    std::string filename = userDir + username + ".txt"; // Luu theo username
    bool success = Utils::writeToFile(filename, toString());

    if (success) {
        // Kiem tra xem username da co trong index chua truoc khi them de tranh trung lap
        std::vector<std::string> existingUsernames = Utils::readAllLines(userIndexFile);
        bool foundInIndex = false;
        for(const std::string& uname : existingUsernames) {
            if(uname == username) {
                foundInIndex = true;
                break;
            }
        }
        if(!foundInIndex) {
            Utils::appendToFile(userIndexFile, username); // Them username vao index file
        }
    }
    return success;
}

// Tai doi tuong User tu file dua tren username
User* User::loadFromFile(const std::string& username) {
    std::string userDir = "data/users/";
    std::string filename = userDir + username + ".txt";
    std::string content = Utils::readFileContent(filename);
    if (content.empty()) {
        return nullptr; // Khong tim thay file hoac file trong
    }
    return fromString(content);
}

